{"version":3,"sources":["components/Header/Header.js","components/Textbox/Textbox.js","components/Post/Post.js","components/Wall/Wall.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Textbox","useState","value","setValue","type","onChange","event","target","placeholder","onClick","fetch","method","headers","body","JSON","stringify","content","votes","Post","props","post","setPost","id","then","response","json","data","setVotes","res","Wall","posts","sort","a","b","reverse","console","log","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2jBAkBeA,MAff,WACE,OACE,qCACE,qBAAKC,UAAU,QAAf,SACE,wDAEF,qBAAKA,UAAU,WAAf,SACE,kDACkB,sCADlB,4B,OCwBOC,G,MA/BC,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,KAsBlB,OACI,sBAAKJ,UAAU,cAAf,UACI,0BAAUK,KAAK,OAAOL,UAAU,UAAUG,MAAOA,EAAOG,SArB5C,SAACC,GACjBH,EAASG,EAAMC,OAAOL,QAoB6DM,YAAY,0CAC3F,wBAAQT,UAAU,QAAQU,QAlBd,WAChBN,EAAS,KAiBL,mBACA,wBAAQJ,UAAU,SAASU,QAfpB,WACPP,GACAQ,MAAM,8BAA+B,CACrCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAACC,QAASd,EAAOe,MAAO,MAGjDd,EAAS,KAOL,yBCgDGe,G,MA1EF,SAACC,GAAW,IAAD,EAEIlB,mBAAS,IAFb,mBAEbmB,EAFa,KAEPC,EAFO,KAKhBX,MAAM,+BAAD,OAAgCS,EAAMG,KACtCC,MAAK,SAACC,GACP,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GACHL,EAAQK,EAAKV,YAVD,MAgBMf,mBAAS,GAhBf,mBAgBbgB,EAhBa,KAgBNU,EAhBM,KA6DpB,OAXIjB,MAAM,+BAAD,OAAgCS,EAAMG,KACtCC,MAAK,SAACK,GACH,OAAOA,EAAIH,UACZF,MAAK,SAACG,GACLC,EAASD,EAAKT,UAQtB,8BACI,sBAAKlB,UAAU,OAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBqB,IAEtB,wBAAQrB,UAAU,SAASU,QAhDxB,WACXkB,EAASV,EAAQ,GACjBP,MAAM,+BAAD,OAAgCS,EAAMG,IAAM,CAC7CX,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBE,MAAOA,EAAQ,MAEpBM,MAAK,SAACK,GACL,OAAOA,EAAIH,WAqCP,eACA,mBAAG1B,UAAU,QAAb,SAAsBkB,IACtB,wBAAQlB,UAAU,WAAWU,QAnCxB,WACbkB,EAASV,EAAQ,GACjBP,MAAM,+BAAD,OAAgCS,EAAMG,IAAM,CAC7CX,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBE,MAAOA,EAAO,MAEnBM,MAAK,SAACK,GACL,OAAOA,EAAIH,WAwBP,sB,OCjDDI,G,MAjBF,WAMT,OALAC,EAAMA,MAAMC,MAAK,SAASC,EAAGC,GACzB,OAAOD,EAAEf,MAAQgB,EAAEhB,SAEvBa,EAAMA,MAAMI,UACZC,QAAQC,IAAIN,GAER,mCAEIA,EAAMA,MAAMO,KAAI,SAAAjB,GAAI,OAChB,cAAC,EAAD,CAAME,GAAIF,EAAKE,YCDhBgB,MAVf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a77aa178.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <div className='title'>\r\n        <h1>The wall of thoughts</h1>\r\n      </div>\r\n      <div className='subtitle'>\r\n        <h2>\r\n          The place where <em>your</em> ideas are heard\r\n        </h2>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport './Textbox.css'\r\n\r\nconst Textbox = () => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleWrite = (event) => {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setValue('')\r\n    }\r\n\r\n    const submit = () => {\r\n        if (value){\r\n            fetch('http://localhost:5000/posts', {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({content: value, votes: 0})\r\n        })\r\n        }\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className='placeholder'>\r\n            <textarea type=\"text\" className=\"textbox\" value={value} onChange={handleWrite} placeholder=\"Share your thoughts with the world...\"/>\r\n            <button className='clear' onClick={handleClear}>Clear</button>\r\n            <button className=\"submit\" onClick={submit}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Textbox\r\n","import React, { useState } from 'react'\r\nimport './Post.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    const [post, setPost] = useState('')\r\n\r\n    const getPost = () => {\r\n        fetch(`http://localhost:5000/posts/${props.id}`)\r\n            .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            setPost(data.content)\r\n        })\r\n    }\r\n\r\n    getPost()\r\n\r\n    const [votes, setVotes] = useState(0)\r\n\r\n    const upvote = () => {\r\n        setVotes(votes + 1)\r\n        fetch(`http://localhost:5000/posts/${props.id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                votes: votes + 1\r\n            })\r\n        }).then((res) => {\r\n            return res.json()\r\n        })\r\n    }\r\n\r\n    const downvote = () => {\r\n        setVotes(votes - 1)\r\n        fetch(`http://localhost:5000/posts/${props.id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                votes: votes -1\r\n            })\r\n        }).then((res) => {\r\n            return res.json()\r\n        })\r\n    }\r\n\r\n\r\n    const getVotes = () => {\r\n        fetch(`http://localhost:5000/posts/${props.id}`)\r\n            .then((res) => {\r\n                return res.json()\r\n            }).then((data) => {\r\n                setVotes(data.votes)\r\n            })\r\n    }\r\n\r\n    getVotes()\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='post'>\r\n                <h2 className='text'>{post}</h2>\r\n\r\n                <button className='btn up' onClick={upvote}>^</button>\r\n                <p className='votes'>{votes}</p>\r\n                <button className='btn down' onClick={downvote}>v</button>\r\n            </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import Post from '../Post/Post'\r\nimport posts from '../../db.json'\r\nimport './Wall.css'\r\nimport React from 'react'\r\n\r\nconst Wall = () => {\r\n    posts.posts.sort(function(a, b) {\r\n        return a.votes - b.votes\r\n    })\r\n    posts.posts.reverse()\r\n    console.log(posts)\r\n    return (\r\n        <>\r\n            {\r\n            posts.posts.map(post => (\r\n                <Post id={post.id}/>\r\n            ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Wall\r\n","import Header from './components/Header/Header'\nimport Textbox from './components/Textbox/Textbox'\nimport Wall from './components/Wall/Wall'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Textbox />\n      <Wall />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}